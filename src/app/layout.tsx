import "@mantine/tiptap/styles.css";
import "@mantine/core/styles.css";
import {
  AppShell,
  AppShellHeader,
  AppShellMain,
  Button,
  ColorSchemeScript,
  MantineProvider,
  createTheme,
  mantineHtmlProps,
  type ButtonProps,
} from "@mantine/core";

import type { Metadata } from "next";
import "../globals.css";
import Link from "next/link";
import cslocale from "dayjs/locale/cs";
import dayjs from "dayjs";
import { getLoggedInUser } from "@/utils/getLoggedInUser";

dayjs.locale(cslocale);

const theme = createTheme({
  primaryColor: "indigo",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const menuItems: Array<{
    href: string;
    label: string;
    color?: ButtonProps["color"];
    prefetch?: boolean;
  }> = [];

  const loggedInUser = await getLoggedInUser();

  if (loggedInUser) {
    menuItems.push({
      href: "/predmety",
      label: "Předměty",
    });

    if (loggedInUser?.role?.canViewAdministration) {
      menuItems.push({
        href: "/administrace/uzivatele",
        label: "Správa uživatelů",
      });

      menuItems.push({
        href: "/administrace/predmety",
        label: "Správa předmětů",
      });
    }

    menuItems.push({
      href: "/logout",
      label: "Odhlásit se",
      color: "red",
      prefetch: false,
    });
  }

  return (
    <html lang="en" {...mantineHtmlProps}>
      <head>
        <ColorSchemeScript />
      </head>
      <body>
        <MantineProvider theme={theme}>
          <AppShell header={{ height: 60 }} padding="md" className="bg-white">
            <AppShellHeader className="container rounded-b-lg shadow-lg shadow-indigo-100 flex justify-between bg-gray-50 px-3">
              {loggedInUser && (
                <div className="flex gap-2 items-center">
                  Zdravíčko, {loggedInUser.name}!
                </div>
              )}

              <ul className="flex gap-2 items-center">
                {menuItems.map((item) => (
                  <li className="bg-white rounded-lg flex" key={item.href}>
                    <Button
                      variant="subtle"
                      size="xs"
                      component={Link}
                      prefetch={item.prefetch}
                      href={item.href}
                      color={item.color}
                    >
                      {item.label}
                    </Button>
                  </li>
                ))}
              </ul>
            </AppShellHeader>

            <AppShellMain>{children}</AppShellMain>
          </AppShell>
        </MantineProvider>
      </body>
    </html>
  );
}
